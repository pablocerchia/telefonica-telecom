[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "FUSIÓN TELECOM Y TELEFÓNICA",
    "section": "",
    "text": "FUSIÓN              TELECOM Y TELEFÓNICA\n\n\n\n\nLa empresa del Grupo Clarín desembolsó US$ 1.245 millones para quedarse con Telefónica Argentina.\n\n\n\n\nLa operación marca un hito histórico en el mercado de telecomunicaciones argentino.\n\n\n\n\nAsí se distribuye el Market Share en Argentina previo a la adquisición.\n\n\n\n\n\n\n\n\n\n\nmarket_data_ojs_raw = await FileAttachment(\"nacional.csv\").csv({ typed: false });\nmarket_data_ojs = market_data_ojs_raw.map(d =&gt; ({\n  ...d,\n  \"Share pre fusion\": parseFloat(String(d[\"Share pre fusion\"]).replace('%', '').trim())\n}));\n\nviewof chart = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(market_data_ojs, {\n      y: \"Grupo ME\",\n      x: \"Share pre fusion\",\n      fill: \"#9F4DD2\",\n    }),\n    Plot.text(market_data_ojs, {\n      x: \"Share pre fusion\",\n      y: \"Grupo ME\",\n      text: d =&gt; d[\"Share pre fusion\"].toFixed(1) + \"%\",\n      dx: 4,\n      fill: \"black\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Grupo\",\n    tickLabelAnchor: \"start\",\n    domain: market_data_ojs.sort((a, b) =&gt; b[\"Share pre fusion\"] - a[\"Share pre fusion\"]).map(d =&gt; d[\"Grupo ME\"]),\n    padding: 0.3\n  },\n  x: {\n    label: \"Share (%)\",\n    grid: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFlow y Movistar son de los principales players dentro del mercado\n\n\n\n\n\n\n\n// market_data_ojs is assumed to be available from the previous OJS cell\n\nviewof chart_highlighted = Plot.plot({\n  title: \"\", // Added a slightly different title\n  marginLeft: 150,\n  marginRight: 50, \n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(market_data_ojs, {\n      y: \"Grupo ME\",\n      x: \"Share pre fusion\",\n      fill: d =&gt; (d[\"Grupo ME\"] === \"Flow\" || d[\"Grupo ME\"] === \"Movistar\") ? \"#9F4DD2\" : \"#cccccc\" // Conditional fill\n    }),\n    Plot.text(market_data_ojs, {\n      x: \"Share pre fusion\",\n      y: \"Grupo ME\",\n      text: d =&gt; d[\"Share pre fusion\"].toFixed(1) + \"%\",\n      dx: 4, \n      fill: d =&gt; (d[\"Grupo ME\"] === \"Flow\" || d[\"Grupo ME\"] === \"Movistar\") ? \"#333333\" : \"#555555\", // Slightly different text fill for highlighted\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Grupo\",\n    tickLabelAnchor: \"start\",\n    domain: market_data_ojs.sort((a, b) =&gt; b[\"Share pre fusion\"] - a[\"Share pre fusion\"]).map(d =&gt; d[\"Grupo ME\"]),\n    padding: 0.3\n  },\n  x: {\n    label: \"Share (%)\",\n    grid: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUn detalle más cercano a estos dos competidores:\n\n\n\n\n\n\n\nzoomed_data = market_data_ojs.filter(d =&gt; d[\"Grupo ME\"] === \"Flow\" || d[\"Grupo ME\"] === \"Movistar\");\n\nviewof chart_zoomed = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50, \n  height: 400, // Adjusted height for fewer bars\n  width: 850,\n  marks: [\n    Plot.barX(zoomed_data, {\n      y: \"Grupo ME\",\n      x: \"Share pre fusion\",\n      fill: \"#9F4DD2\" // Keep highlight color\n    }),\n    Plot.text(zoomed_data, {\n      x: \"Share pre fusion\",\n      y: \"Grupo ME\",\n      text: d =&gt; d[\"Share pre fusion\"].toFixed(1) + \"%\",\n      dx: 4, \n      fill: \"#333333\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Grupo\",\n    tickLabelAnchor: \"start\",\n    domain: zoomed_data.map(d =&gt; d[\"Grupo ME\"]), // Domain is just these two\n    padding: 0.5 // More padding for fewer bars\n  },\n  x: {\n    label: \"Share (%)\",\n    grid: true,\n    // Optional: Adjust domain to zoom on x-axis if desired, e.g.:\n    // domain: [0, Math.max(...zoomed_data.map(d =&gt; d[\"Share pre fusion\"])) * 1.1] \n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¿Cómo es la presencia de Movistar en el mercado?\n\n\n\n\nSegún el relevamiento de BB Media, Movistar tiene actualmente presencia en 14 provincias.\n\n\n\n\nEl 81% de sus abonados se concentran en CABA, Buenos Aires y Mendoza.\n\n\n\n\nLa distribución de abonados muestra una clara concentración en tres provincias principales.\n\n\n\n\n\n\n\nPlot = require(\"@observablehq/plot\")\nd3 = require(\"d3@7\")\n\nmapa_geojson_data = await d3.json(\"provincias.geojson\");\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 2200,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: \"lightgray\",\n      stroke: \"white\",\n      strokeWidth: 0.1,\n      tip: true\n    })\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprovincesToHighlight = [\n  \"BUENOS AIRES\", \"CIUDAD AUTONOMA DE BUENOS AIRES\", \"CHUBUT\", \"CORDOBA\",\n  \"ENTRE RIOS\", \"FORMOSA\", \"LA PAMPA\", \"MENDOZA\", \"MISIONES\",\n  \"NEUQUEN\", \"RIO NEGRO\", \"SALTA\", \"SAN JUAN\", \"TIERRA DEL FUEGO\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 2200,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: \"lightgray\",\n      stroke: \"white\",\n      strokeWidth: 0.1\n    }),\n    Plot.geo(\n      {\n        type: \"FeatureCollection\",\n        features: mapa_geojson_data.features.filter(\n          d =&gt; provincesToHighlight.includes(d.properties.id)\n        )\n      },\n      {\n        fill: \"#009ef7\",\n        fillOpacity: 0.8,\n        stroke: \"black\",\n        strokeWidth: 0.1\n      }\n    )\n  ],\n  width: 1600,\n  height: 1400,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprovincia_data = await FileAttachment(\"PROVINCIA_MOVISTAR.csv\").csv({ typed: false });\n\n// Convertir los valores a números y ordenar los datos\nprovincia_data_processed = provincia_data\n  .filter(d =&gt; d.Provincia) // Filter out empty rows\n  .map(d =&gt; ({\n    Provincia: d.Provincia,\n    \"Abonados pre fusion\": parseInt(d[\"Abonados pre fusion\"].replace(/,/g, '')) // Remove commas and convert to number\n  }))\n  .sort((a, b) =&gt; b[\"Abonados pre fusion\"] - a[\"Abonados pre fusion\"]);\n\n// Provincias a destacar\nprovinciasDestacadas = [\n  \"BUENOS AIRES\",\n  \"CIUDAD AUTONOMA DE BUENOS AIRES\",\n  \"MENDOZA\"\n];\n\nviewof chart_provincias = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(provincia_data_processed, {\n      y: \"Provincia\",\n      x: \"Abonados pre fusion\",\n      fill: d =&gt; provinciasDestacadas.includes(d.Provincia) ? \"#009ef7\" : \"#cccccc\",\n      fillOpacity: d =&gt; provinciasDestacadas.includes(d.Provincia) ? 0.9 : 0.6\n    }),\n    Plot.text(provincia_data_processed, {\n      x: \"Abonados pre fusion\",\n      y: \"Provincia\",\n      text: d =&gt; d[\"Abonados pre fusion\"].toString(),\n      dx: 4,\n      fill: d =&gt; provinciasDestacadas.includes(d.Provincia) ? \"#333333\" : \"#555555\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Provincia\",\n    tickLabelAnchor: \"start\",\n    domain: provincia_data_processed.map(d =&gt; d.Provincia),\n    padding: 0.3\n  },\n  x: {\n    label: \"Abonados\",\n    grid: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconcentracionProvincias = [\n  \"BUENOS AIRES\",\n  \"CIUDAD AUTONOMA DE BUENOS AIRES\",\n  \"MENDOZA\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 2200,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: \"lightgray\",\n      stroke: \"white\",\n      strokeWidth: 0.1,\n      tip: true\n    }),\n    Plot.geo(\n      {\n        type: \"FeatureCollection\",\n        features: mapa_geojson_data.features.filter(\n          d =&gt; concentracionProvincias.includes(d.properties.id)\n        )\n      },\n      {\n        fill: \"#009ef7\",\n        fillOpacity: 0.9,\n        stroke: \"black\",\n        strokeWidth: 0.15,\n        tip: true\n      }\n    )\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLas provincias donde Movistar tiene una posición más dominante en el market share es en la Patagonia, con participaciones que van desde el 36% hasta el 45% del mercado.\n\n\n\n\nEstas son: Río Negro, Chubut, Tierra del Fuego y Neuquén.\n\n\n\n\nEn estas provincias del sur, Movistar alcanza sus mayores niveles de participación de mercado, llegando al 45.6% en Río Negro y 43.6% en Chubut.\n\n\n\n\n\n\n\nprovinciasPatagonia = [\n  \"RIO NEGRO\",\n  \"CHUBUT\",\n  \"TIERRA DEL FUEGO\",\n  \"NEUQUEN\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 3500,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: \"lightgray\",\n      stroke: \"white\",\n      strokeWidth: 0.1\n    }),\n    Plot.geo(\n      {\n        type: \"FeatureCollection\",\n        features: mapa_geojson_data.features.filter(\n          d =&gt; provinciasPatagonia.includes(d.properties.id)\n        )\n      },\n      {\n        fill: \"#009ef7\",\n        fillOpacity: 0.8,\n        stroke: \"black\",\n        strokeWidth: 0.15\n      }\n    )\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprovincia_share_data = await FileAttachment(\"PROVINCIA_MOVISTAR.csv\").csv({ typed: false });\n\n// Convertir los valores a números y ordenar los datos\nprovincia_share_processed = provincia_share_data\n  .filter(d =&gt; d.Provincia) // Filter out empty rows\n  .map(d =&gt; ({\n    Provincia: d.Provincia,\n    \"Share pre fusion\": parseFloat(d[\"Share pre fusion\"].replace('%', ''))\n  }))\n  .sort((a, b) =&gt; b[\"Share pre fusion\"] - a[\"Share pre fusion\"]);\n\nviewof chart_share = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(provincia_share_processed, {\n      y: \"Provincia\",\n      x: \"Share pre fusion\",\n      fill: d =&gt; provinciasPatagonia.includes(d.Provincia) ? \"#009ef7\" : \"#cccccc\",\n      fillOpacity: d =&gt; provinciasPatagonia.includes(d.Provincia) ? 0.9 : 0.6\n    }),\n    Plot.text(provincia_share_processed, {\n      x: \"Share pre fusion\",\n      y: \"Provincia\",\n      text: d =&gt; d[\"Share pre fusion\"].toFixed(1) + \"%\",\n      dx: 4,\n      fill: d =&gt; provinciasPatagonia.includes(d.Provincia) ? \"#333333\" : \"#555555\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Provincia\",\n    tickLabelAnchor: \"start\",\n    domain: provincia_share_processed.map(d =&gt; d.Provincia),\n    padding: 0.3\n  },\n  x: {\n    label: \"Market Share (%)\",\n    grid: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¿Cómo quedaría reconfigurada la presencia de Flow en el mercado?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActualmente Flow es el líder en el mercado de Internet en Argentina con 3.9 millones de abonados y 34.68% de Market Share.\n\n\n\n\nTiene presencia en 23 provincias\n\n\n\n\n\n\n\n\n\n\nprovinciasFlow = [\n\"BUENOS AIRES\",\n\"CIUDAD AUTONOMA DE BUENOS AIRES\",\n\"CATAMARCA\",\n\"CHACO\",\n\"CHUBUT\",\n\"CORDOBA\",\n\"CORRIENTES\",\n\"ENTRE RIOS\",\n\"FORMOSA\",\n\"JUJUY\",\n\"LA PAMPA\",\n\"LA RIOJA\",\n\"MENDOZA\",\n\"MISIONES\",\n\"NEUQUEN\",\n\"RIO NEGRO\",\n\"SALTA\",\n\"SAN JUAN\",\n\"SAN LUIS\",\n\"SANTA FE\",\n\"SANTIAGO DEL ESTERO\",\n\"TIERRA DEL FUEGO\",\n\"TUCUMAN\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 3500,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: \"lightgray\",\n      stroke: \"white\",\n      strokeWidth: 0.1\n    }),\n    Plot.geo(\n      {\n        type: \"FeatureCollection\",\n        features: mapa_geojson_data.features.filter(\n          d =&gt; provinciasFlow.includes(d.properties.id)\n        )\n      },\n      {\n        fill: \"#21dbaa\",\n        fillOpacity: 0.8,\n        stroke: \"black\",\n        strokeWidth: 0.15\n      }\n    )\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHoy en día Flow es LÍDER DE MERCADO en 13 de esas provincias.\n\n\n\n\n\n\n\nprovinciasVioleta = [\n  \"BUENOS AIRES\",\n  \"CHACO\",\n  \"CIUDAD AUTONOMA DE BUENOS AIRES\",\n  \"CORDOBA\",\n  \"CORRIENTES\",\n  \"ENTRE RIOS\",\n  \"FORMOSA\",\n  \"LA RIOJA\",\n  \"MISIONES\",\n  \"SALTA\",\n  \"SANTA FE\",\n  \"SANTIAGO DEL ESTERO\",\n  \"TUCUMAN\"\n];\n\nprovinciasVerdes = [\n  \"CATAMARCA\",\n  \"CHUBUT\",\n  \"JUJUY\",\n  \"LA PAMPA\",\n  \"MENDOZA\",\n  \"NEUQUEN\",\n  \"RIO NEGRO\",\n  \"SAN JUAN\",\n  \"SAN LUIS\",\n  \"TIERRA DEL FUEGO\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 2200,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: d =&gt; {\n        if (provinciasVioleta.includes(d.properties.id)) return \"#8A26C9\";\n        if (provinciasVerdes.includes(d.properties.id)) return \"#21dbaa\";\n        return \"lightgray\";  // For SANTA CRUZ and any other provinces\n      },\n      stroke: \"white\",\n      strokeWidth: 0.1\n    })\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTras la fusión, Flow pasará a ser LÍDER DE MERCADO en 17 de esas provincias y tendría cobertura en todas las provincias del país.\n\n\n\n\nVeámos en detalle el impacto de la fusión en el Market Share de Flow.\n\n\n\n\nAsí quedaría el Market Share de Flow en las provincias que comparte cobertura con Movistar.\n\n\n\n\nAsí quedaría el Market Share de Flow en las provincias que comparte cobertura con Movistar.\n\n\n\n\n\n\n\nprovinciasPostFusion = [\n  \"BUENOS AIRES\",\n  \"CHACO\",\n  \"CHUBUT\",\n  \"CIUDAD AUTONOMA DE BUENOS AIRES\",\n  \"CORDOBA\",\n  \"CORRIENTES\",\n  \"ENTRE RIOS\",\n  \"FORMOSA\",\n  \"LA RIOJA\",\n  \"MENDOZA\",\n  \"MISIONES\",\n  \"RIO NEGRO\",\n  \"SALTA\",\n  \"SAN JUAN\",\n  \"SANTA FE\",\n  \"SANTIAGO DEL ESTERO\",\n  \"TUCUMAN\"\n];\n\nprovinciasVerdesPostFusion = [\n  \"CATAMARCA\",\n  \"JUJUY\",\n  \"LA PAMPA\",\n  \"NEUQUEN\",\n  \"SAN LUIS\",\n  \"TIERRA DEL FUEGO\",\n  \"SANTA CRUZ\"\n];\n\nPlot.plot({\n  projection: {\n    type: \"mercator\",\n    scale: 2200,\n    rotate: [63.5, 38, 0]\n  },\n  marks: [\n    Plot.geo(mapa_geojson_data, {\n      fill: d =&gt; {\n        if (provinciasPostFusion.includes(d.properties.id)) return \"#8A26C9\";\n        if (provinciasVerdesPostFusion.includes(d.properties.id)) return \"#21dbaa\";\n        return \"lightgray\";  // For SANTA CRUZ and any other provinces\n      },\n      stroke: \"white\",\n      strokeWidth: 0.1\n    })\n  ],\n  width: 2400,\n  height: 2050,\n  style: {\n    background: \"transparent\"\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomparacion_data = await FileAttachment(\"comparacion_mov_flow.csv\").csv({ typed: false });\n\n// Convertir los valores a números y procesar los datos\ncomparacion_processed = comparacion_data\n  .map(d =&gt; ({\n    Provincia: d.Provincia,\n    Grupo: d[\"Grupo ME\"],\n    Share: parseFloat(d[\"Share pre fusion\"].replace('%', ''))\n  }))\n  .sort((a, b) =&gt; {\n    if (a.Provincia !== b.Provincia) {\n      return b.Share - a.Share;\n    }\n    // Si es la misma provincia, Flow va primero\n    return a.Grupo === \"Flow\" ? -1 : 1;\n  });\n\nviewof chart_comparacion = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  marginBottom: 100,\n  height: 700,\n  width: 850,\n  y: {\n    label: \"Market Share (%)\",\n    grid: true\n  },\n  x: {\n    label: \"Provincia\",\n    tickRotate: -45,\n    padding: 0.2\n  },\n  marks: [\n    Plot.barY(comparacion_processed, {\n      x: \"Provincia\",\n      y: \"Share\",\n      fill: \"Grupo\",\n      title: d =&gt; `${d.Grupo}: ${d.Share.toFixed(1)}%`,\n      dodge: true,\n      order: d =&gt; d.Grupo === \"Flow\" ? 0 : 1  // Asegura que Flow siempre va primero\n    })\n  ],\n  color: {\n    domain: [\"Flow\", \"Movistar\"],\n    range: [\"#21dbaa\", \"#009ef7\"],\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomparacion_data_agrupado = await FileAttachment(\"comparacion_mov_flow.csv\").csv({ typed: false });\n\n// Convertir los valores a números y procesar los datos\ncomparacion_processed_agrupado = comparacion_data_agrupado\n  .map(d =&gt; ({\n    Provincia: d.Provincia,\n    Grupo: d[\"Grupo ME\"],\n    Share: parseFloat(d[\"Share pre fusion\"].replace('%', ''))\n  }))\n  .sort((a, b) =&gt; b.Share - a.Share);\n\nviewof chart_agrupado = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  marginBottom: 100,\n  height: 700,\n  width: 850,\n  y: {\n    label: \"Market Share (%)\",\n    grid: true\n  },\n  x: {\n    label: \"Provincia\",\n    tickRotate: -45,\n    padding: 0.2\n  },\n  marks: [\n    Plot.barY(comparacion_processed_agrupado, {\n      x: \"Provincia\",\n      y: \"Share\",\n      fx: \"Grupo\",  // &lt;--- esto es lo clave\n      fill: \"Grupo\",\n      title: d =&gt; `${d.Grupo}: ${d.Share.toFixed(1)}%`\n    })\n  ],\n  color: {\n    domain: [\"Flow\", \"Movistar\"],\n    range: [\"#21dbaa\", \"#009ef7\"],\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nflow_post_data = await FileAttachment(\"comparacion_mov_flow.csv\").csv({ typed: false });\n\n// Filtrar solo Flow y procesar los datos\nflow_post_processed = flow_post_data\n  .filter(d =&gt; d[\"Grupo ME\"] === \"Flow\")\n  .map(d =&gt; ({\n    Provincia: d.Provincia,\n    Share: parseFloat(d[\"Share post fusion\"].replace('%', ''))\n  }))\n  .sort((a, b) =&gt; b.Share - a.Share);\n\nviewof chart_flow_post = Plot.plot({\n  title: \"\",\n  marginLeft: 150,\n  marginRight: 50,\n  marginBottom: 100,\n  height: 700,\n  width: 850,\n  y: {\n    label: \"Market Share Post Fusión (%)\",\n    grid: true\n  },\n  x: {\n    label: \"Provincia\",\n    tickRotate: -45,\n    padding: 0.2\n  },\n  marks: [\n    Plot.barY(flow_post_processed, {\n      x: \"Provincia\",\n      y: \"Share\",\n      fill: \"#21dbaa\"\n    }),\n    Plot.text(flow_post_processed, {\n      x: \"Provincia\",\n      y: \"Share\",\n      text: d =&gt; d.Share.toFixed(1) + \"%\",\n      dy: -8,\n      fontSize: 12\n    })\n  ]\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA nivel nacional, Flow lidera el mercado con un 34.7% de participación, seguido por otros operadores con 18.9%. Movistar, que será adquirida por Flow, actualmente tiene un 12.9% del mercado.\n\n\n\n\nTras la fusión, Flow alcanzará un 47.5% del mercado nacional, consolidándose como el líder indiscutido del sector. El siguiente competidor más cercano mantendrá un 18.9% de participación.\n\n\n\n\n\n\n\nnacional_data = await FileAttachment(\"nacional.csv\").csv({ typed: false });\n\n// Process the data\nnacional_processed = nacional_data\n  .filter(d =&gt; d[\"Grupo ME\"]) // Filter out empty rows\n  .map(d =&gt; ({\n    Grupo: d[\"Grupo ME\"],\n    Share: parseFloat(d[\"Share pre fusion\"].replace('%', '').trim())\n  }))\n  .sort((a, b) =&gt; b.Share - a.Share);\n\nviewof chart_nacional = Plot.plot({\n  title: \"Market Share Nacional Pre Fusión\",\n  marginLeft: 150,\n  marginRight: 50,\n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(nacional_processed, {\n      y: \"Grupo\",\n      x: \"Share\",\n      fill: d =&gt; {\n        if (d.Grupo === \"Flow\") return \"#21dbaa\";\n        if (d.Grupo === \"Movistar\") return \"#009ef7\";\n        return \"#cccccc\";\n      }\n    }),\n    Plot.text(nacional_processed, {\n      x: \"Share\",\n      y: \"Grupo\",\n      text: d =&gt; d.Share.toFixed(1) + \"%\",\n      dx: 4,\n      fill: \"black\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Grupo\",\n    tickLabelAnchor: \"start\",\n    domain: nacional_processed.map(d =&gt; d.Grupo),\n    padding: 0.3\n  },\n  x: {\n    label: \"Market Share (%)\",\n    grid: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnacional_data_post = await FileAttachment(\"nacional.csv\").csv({ typed: false });\n\n// Process the data for post fusion\nnacional_processed_post = nacional_data_post\n  .filter(d =&gt; d[\"Grupo ME\"] && parseFloat(d[\"Share post fusion\"].replace('%', '').trim()) &gt; 0) // Filter out Movistar and empty rows\n  .map(d =&gt; ({\n    Grupo: d[\"Grupo ME\"],\n    Share: parseFloat(d[\"Share post fusion\"].replace('%', '').trim())\n  }))\n  .sort((a, b) =&gt; b.Share - a.Share);\n\nviewof chart_nacional_post = Plot.plot({\n  title: \"Market Share Nacional Post Fusión\",\n  marginLeft: 150,\n  marginRight: 50,\n  height: 700,\n  width: 850,\n  marks: [\n    Plot.barX(nacional_processed_post, {\n      y: \"Grupo\",\n      x: \"Share\",\n      fill: d =&gt; d.Grupo === \"Flow\" ? \"#21dbaa\" : \"#cccccc\"\n    }),\n    Plot.text(nacional_processed_post, {\n      x: \"Share\",\n      y: \"Grupo\",\n      text: d =&gt; d.Share.toFixed(1) + \"%\",\n      dx: 4,\n      fill: \"black\",\n      textAnchor: \"start\"\n    }),\n    Plot.ruleX([0])\n  ],\n  y: {\n    label: \"Grupo\",\n    tickLabelAnchor: \"start\",\n    domain: nacional_processed_post.map(d =&gt; d.Grupo),\n    padding: 0.3\n  },\n  x: {\n    label: \"Market Share (%)\",\n    grid: true\n  }\n})"
  }
]